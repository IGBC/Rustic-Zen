# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
image: "rust:latest"

# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
#services:
#  - mysql:latest
#  - redis:latest
#  - postgres:latest

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.
#before_script:
#- apt-get update -yqq
#- apt-get install -yqq --no-install-recommends build-essential

# Use cargo to test the project
test:unit-tests:
  script:
  - rustc --version && cargo --version      # Print version info for debugging
  - cargo test --all --verbose
  artifacts:
    paths:
    - image.ray_not_black.png
    - lib.png_test.png
    - lib.png_test2.png

test:example-dawn:
  script:
  - rustc --version && cargo --version      # Print version info for debugging
  - cargo run --example dawn --release
  artifacts:
    paths:
    - dawn.png
test:example-laser-rainbow:
  script:
  - rustc --version && cargo --version      # Print version info for debugging
  - cargo run --example laser-rainbow --release
  artifacts:
    paths:
    - laser-rainbow.png